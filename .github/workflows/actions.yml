# This is a basic workflow to help you get started with Actions

name: CI

env: 
  Result: Success
# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "development" ]
  pull_request:
    branches: [ "development" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: self-hosted

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: MassCompile
        run: LabVIEWCLI -PortNumber 3365 -OperationName MassCompile -DirectoryToCompile "C:\actions-runner\_work\image-harvest" -MassCompileLogFile "C:\actions-runner\_work\log.txt" -AppendToMassCompileLog false -NumOfVIsToCache 10 -ReloadLVSBs false
      
      - name: Build a Log
        uses: actions/upload-artifact@v3.1.2
        with:
       # Artifact name
          name: LogFile
    # A file, directory or wildcard pattern that describes what to upload
          path: C:\actions-runner\_work\log.txt
      #Run command to perform UnitTest on success of MassCompile
      - name: UnitTests
        if: steps.MassCompile == 'success'
        run: echo $Result #LabVIEWCLI -OperationName RunUnitTests -ProjectPath "C:\actions-runner\_work\image-harvest\ImageHarvest.lvproj" -JUnitReportPath "C:\actions-runner\_work\UnitTestLog.txt"
      - name: Build a Log
        uses: actions/upload-artifact@v3.1.2
        with:     
     # Artifact name
          name: LogFile
    # A file, directory or wildcard pattern that describes what to upload
          path: C:\actions-runner\_work\UnitTestlog.txt
          
      # BuildSpec operation to build the exe and upload the artifact to Github remote
      - name: BuildSpec
        if: steps.MassCompile.UnitTests == 'success'
        run: LabVIEWCLI -OperationName ExecuteBuildSpec -ProjectPath "C:\actions-runner\_work\image-harvest\Aayvu-CT.lvproj" -TargetName "My Computer" -BuildSpecName "Aayvu-CT-CI"
      - name: Build a Log
        uses: actions/upload-artifact@v3.1.2
        with:    
     # Artifact name
          name: BuildSpec
    # A file, directory or wildcard pattern that describes what to upload
          path: C:\actions-runner\builds\Aayvu-CT\Aayvu-CT
